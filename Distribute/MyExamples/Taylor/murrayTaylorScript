# Test workload on multiple threads problem sizes and repeats
# repeat runs are generated from within the executable
#
# USAGE: ./murrayTaylorScript threads ndatablocks runs resultfile nterms xvalue
#
# threads:    max threadcount
# ndatablocks number of sub-blocks (for stealing) created from the initial
# runs:       number of repeat runs
# resultfile: results are sent here
# nterms      number of terms to evaluate
# xvalue      value of x to calculate


#echo "grain	threads	time" >> $5

threads=$1
ndatablocks=$2
runs=$3
resultfile=$4
nterms=$5
xvalue=$6

echo "time, nthreads, ndatablocks, nterms, xvalue" >> $resultfile
for threadcount in $(seq 1 $threads)
do
  g++ -o murrayTaylor -std=c++11 -O2 -lpthread -DNTHREADS=$threadcount -DNTERMS=$nterms -DXVALUE=$xvalue -DNDATABLOCKS=$ndatablocks murrayTaylor.cpp
  for run in $(seq 1 $runs)
  do
    ./murrayTaylor >> $resultfile
  done
done

